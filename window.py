# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'window.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(360, 380)
        MainWindow.setMinimumSize(QtCore.QSize(360, 380))
        MainWindow.setMaximumSize(QtCore.QSize(360, 380))
        MainWindow.setWindowOpacity(1.0)
        MainWindow.setLayoutDirection(QtCore.Qt.RightToLeft)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("")
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setMouseTracking(False)
        self.centralwidget.setStyleSheet("background-color: rgba(26, 26, 26, 0.90)")
        self.centralwidget.setObjectName("centralwidget")
        self.Title = QtWidgets.QLabel(self.centralwidget)
        self.Title.setEnabled(True)
        self.Title.setGeometry(QtCore.QRect(13, 43, 341, 31))
        font = QtGui.QFont()
        font.setFamily("Thintel")
        font.setPointSize(36)
        self.Title.setFont(font)
        self.Title.setStyleSheet("color: #000;\n"
"background-color: rgba(0,0,0,0)")
        self.Title.setLineWidth(1)
        self.Title.setTextFormat(QtCore.Qt.AutoText)
        self.Title.setObjectName("Title")
        self.loginEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.loginEdit.setGeometry(QtCore.QRect(30, 90, 300, 40))
        font = QtGui.QFont()
        font.setFamily("Thintel")
        font.setPointSize(28)
        self.loginEdit.setFont(font)
        self.loginEdit.setMouseTracking(True)
        self.loginEdit.setStyleSheet("background-color: rgba(74, 74, 74, 0.90);\n"
"border: 0;\n"
"color: white;")
        self.loginEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.loginEdit.setObjectName("loginEdit")
        self.passEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.passEdit.setGeometry(QtCore.QRect(30, 140, 300, 40))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.loginEdit.sizePolicy().hasHeightForWidth())
        self.loginEdit.setSizePolicy(sizePolicy)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.passEdit.sizePolicy().hasHeightForWidth())
        self.passEdit.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Thintel")
        font.setPointSize(28)
        self.passEdit.setFont(font)
        self.passEdit.setStyleSheet("background-color: rgba(74, 74, 74, 0.90);\n"
"border: 0;\n"
"color: white;")
        self.passEdit.setEchoMode(QtWidgets.QLineEdit.Password)
        self.passEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.passEdit.setObjectName("passEdit")
        self.countButton = QtWidgets.QPushButton(self.centralwidget)
        self.countButton.setGeometry(QtCore.QRect(60, 250, 241, 41))
        font = QtGui.QFont()
        font.setFamily("Thintel")
        font.setPointSize(36)
        self.countButton.setFont(font)
        self.countButton.setStyleSheet("QPushButton {\n"
"    color: white;\n"
"    background-color: #de0000;\n"
"    border: 0;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    color: #de0000;\n"
"    background-color: white;\n"
"    border: 0;\n"
"}")
        self.countButton.setCheckable(False)
        self.countButton.setChecked(False)
        self.countButton.setFlat(False)
        self.countButton.setObjectName("countButton")
        self.nicknameEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.nicknameEdit.setGeometry(QtCore.QRect(30, 190, 300, 40))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nicknameEdit.sizePolicy().hasHeightForWidth())
        self.nicknameEdit.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Thintel")
        font.setPointSize(28)
        self.nicknameEdit.setFont(font)
        self.nicknameEdit.setStyleSheet("background-color: rgba(74, 74, 74, 0.90);\n"
"border: 0;\n"
"color: white;")
        self.nicknameEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.nicknameEdit.setObjectName("nicknameEdit")
        self.TitleShadow = QtWidgets.QLabel(self.centralwidget)
        self.TitleShadow.setEnabled(True)
        self.TitleShadow.setGeometry(QtCore.QRect(10, 40, 341, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TitleShadow.sizePolicy().hasHeightForWidth())
        self.TitleShadow.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Thintel")
        font.setPointSize(36)
        self.TitleShadow.setFont(font)
        self.TitleShadow.setStyleSheet("color: #f00;\n"
"background-color: rgba(0,0,0,0);")
        self.TitleShadow.setObjectName("TitleShadow")
        self.resultLabel = QtWidgets.QLabel(self.centralwidget)
        self.resultLabel.setGeometry(QtCore.QRect(60, 310, 241, 51))
        font = QtGui.QFont()
        font.setFamily("Thintel")
        font.setPointSize(36)
        self.resultLabel.setFont(font)
        self.resultLabel.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"color: white;\n"
"")
        self.resultLabel.setText("")
        self.resultLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.resultLabel.setWordWrap(False)
        self.resultLabel.setObjectName("resultLabel")
        self.countShadow = QtWidgets.QLabel(self.centralwidget)
        self.countShadow.setGeometry(QtCore.QRect(63, 253, 241, 41))
        self.countShadow.setStyleSheet("background-color: black")
        self.countShadow.setText("")
        self.countShadow.setObjectName("countShadow")
        self.closeButton = QtWidgets.QPushButton(self.centralwidget)
        self.closeButton.setGeometry(QtCore.QRect(340, 0, 21, 21))
        font = QtGui.QFont()
        font.setFamily("Thintel")
        font.setPointSize(26)
        self.closeButton.setFont(font)
        self.closeButton.setStyleSheet("QPushButton {\n"
"    color: white;\n"
"    background-color: #de0000;\n"
"    border: 0;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    color: #de0000;\n"
"    background-color: white;\n"
"    border: 0;\n"
"}")
        self.closeButton.setObjectName("closeButton")
        self.barLabel = QtWidgets.QLabel(self.centralwidget)
        self.barLabel.setGeometry(QtCore.QRect(0, 0, 361, 21))
        self.barLabel.setStyleSheet("background-color: #000")
        self.barLabel.setText("")
        self.barLabel.setObjectName("barLabel")
        self.signLabel = QtWidgets.QLabel(self.centralwidget)
        self.signLabel.setGeometry(QtCore.QRect(250, 360, 101, 20))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.signLabel.sizePolicy().hasHeightForWidth())
        self.signLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Thintel")
        font.setPointSize(14)
        self.signLabel.setFont(font)
        self.signLabel.setStyleSheet("color: #adadad;\n"
"background-color: rgba(0,0,0,0);")
        self.signLabel.setObjectName("signLabel")
        self.barLabel.raise_()
        self.countShadow.raise_()
        self.Title.raise_()
        self.loginEdit.raise_()
        self.passEdit.raise_()
        self.countButton.raise_()
        self.nicknameEdit.raise_()
        self.TitleShadow.raise_()
        self.resultLabel.raise_()
        self.closeButton.raise_()
        self.signLabel.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.closeButton.clicked.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Title.setText(_translate("MainWindow", "DISCORD CALL TIME COUNTER"))
        self.loginEdit.setPlaceholderText(_translate("MainWindow", "login"))
        self.passEdit.setPlaceholderText(_translate("MainWindow", "password"))
        self.countButton.setText(_translate("MainWindow", "COUNT"))
        self.countButton.setShortcut(_translate("MainWindow", "Return"))
        self.nicknameEdit.setPlaceholderText(_translate("MainWindow", "buddy nickname"))
        self.TitleShadow.setText(_translate("MainWindow", "DISCORD CALL TIME COUNTER"))
        self.closeButton.setText(_translate("MainWindow", "X"))
        self.closeButton.setShortcut(_translate("MainWindow", "Esc"))
        self.signLabel.setText(_translate("MainWindow", "Made by 4mo (c) 2021"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
